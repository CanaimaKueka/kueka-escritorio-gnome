#!/bin/bash -e
#
# ==============================================================================
# PAQUETE: canaima-escritorio-gnome
# ARCHIVO: postinst
# DESCRIPCIÓN: Configura el sistema despues la instalación del paquete.
# COPYRIGHT:
#  (C) 2010 Luis Alejandro Martínez Faneyth <martinez.faneyth@gmail.com>
# LICENCIA: GPL3
# ==============================================================================
#
# Este programa es software libre. Puede redistribuirlo y/o modificarlo bajo los
# términos de la Licencia Pública General de GNU (versión 3).

PKG="canaima-escritorio-gnome"

case ${1} in

	configure)
	
	# ¿No existe la carpeta escritorio?
	if [ ! -d /etc/skel/Escritorio ]; then
		[ -h /etc/skel/Escritorio ] && rm -rf /etc/skel/Escritorio
		[ -f /etc/skel/Escritorio ] && rm -rf /etc/skel/Escritorio
		mkdir /etc/skel/Escritorio
		ADVERTENCIA "Creando carpeta Escritorio en /etc/skel/"
	fi 
	# ¿Existe un enlace simbólico llamado Desktop?
	# ¿Y una carpeta llamada Escritorio?
	if [ -h /etc/skel/Desktop ] && [ -d /etc/skel/Escritorio ]; then
		# Borra el enlace simbólico
		rm -rf /etc/skel/Desktop
		ADVERTENCIA "Removiendo enlace de escritorio Desktop en /etc/skel/"
	fi
	# ¿Existe un enlace simbólico llamado Escritorio?
	# ¿Y una carpeta llamada Desktop?
	if [ -h /etc/skel/Escritorio ] && [ -d /etc/skel/Desktop ]; then
		# Borra el enlace simbólico
		rm -rf /etc/skel/Escritorio
		# y renombra la carpeta a Escritorio
		mv /etc/skel/Desktop /etc/skel/Escritorio
		ADVERTENCIA "Borrando enlace simbólico Escritorio y renombrando carpeta Desktop a Escritorio en /etc/skel/"
	fi
	# ¿Existen dos directorios con el mismo propósito?
        if [ -d /etc/skel/Escritorio ] && [ -d /etc/skel/Desktop ]; then
		# Mueve el contenido de Desktop a Escritorio
        if [ $( ls -lah /etc/skel/Desktop | wc -l ) -gt 3 ]; then
    		mv /etc/skel/Desktop/* /etc/skel/Escritorio/
        fi
		# Borra la carpeta Desktop
		rm -rf /etc/skel/Desktop
		ADVERTENCIA "Moviendo el contenido de la carpeta Desktop a Escritorio y borrando Desktop en /etc/skel/"
	fi

	if [ -e /etc/default/prelink ]; then
		ADVERTENCIA "Pre-enlazando librerías para mejorar la eficiencia de Canaima (prelink)"
		echo "Éste proceso tomará un poco de tiempo dependiendo de la cantidad de programas instalados ..."
		echo "Le recomendamos que se tome un buen café venezolano mientras espera."
		sed -i 's/PRELINKING=.*/PRELINKING=yes/g' /etc/default/prelink
		/etc/cron.daily/prelink
	fi

	touch /.readahead_collector

cat <<EOF >/etc/xdg/user-dirs.defaults
# Default settings for user directories
#
# The values are relative pathnames from the home directory and
# will be translated on a per-path-element basis into the users locale
DESKTOP=Escritorio
DOWNLOAD=Descargas
TEMPLATES=Plantillas
PUBLICSHARE=Público
DOCUMENTS=Documentos
MUSIC=Música
PICTURES=Imágenes
VIDEOS=Videos
# Another alternative is:
#MUSIC=Documents/Music
#PICTURES=Documents/Pictures
#VIDEOS=Documents/Videos

EOF

	ADVERTENCIA "Añadiendo noatime a /etc/fstab"

	if [ $( cat ${FSTAB} | grep -c "Optimizado para Canaima GNU/Linux" ) == 0 ]; then
		echo "#" >> ${FSTAB}
		echo "# Optimizado para Canaima GNU/Linux (agregado noatime a las opciones de disco)" >> ${FSTAB}
		echo "#" >> ${FSTAB}
	fi

	sed -i 's/   / /g' ${FSTAB}
	sed -i 's/   / /g' ${FSTAB}
	sed -i 's/  / /g' ${FSTAB}
	sed -i 's/  / /g' ${FSTAB}
	sed -i 's/, /,/g' ${FSTAB}
	sed -i 's/  / /g' ${FSTAB}
	sed -i 's/  / /g' ${FSTAB}
	sed -i 's/#.*//g' ${FSTAB}

	for datos in $( cat ${FSTAB} | awk '{print $3"##--TOKEN--##"$2"##--TOKEN--##"$4"##--TOKEN--##"$1}' ); do

		for fs in ext2 ext3 ext4 xfs ; do

		if [ $( echo $( expr "$datos" : "$fs" ) ) == 4 ]; then

		parsing=${datos#$fs##--TOKEN--##}
		dispositivo=$( echo $parsing | sed 's/##--TOKEN--##/ /g' | awk '{print $1}' )
		dispositivo=$( echo $dispositivo | sed 's/\//\\\//g' )
		propiedad=$( echo $parsing | sed 's/##--TOKEN--##/ /g' | awk '{print $2}' )
		uuid=$( echo $parsing | sed 's/##--TOKEN--##/ /g' | awk '{print $3}' | sed 's/\//\\\//g' )

		case ${propiedad} in

			"defaults")

			if [ $dispositivo == "\/" ]; then
				sed -i 's/'${uuid}' '${dispositivo}' '${fs}' '${propiedad}'/'${uuid}' '${dispositivo}' '${fs}' defaults,noatime,errors=remount-ro/g' ${FSTAB}
			else
				sed -i 's/'${uuid}' '${dispositivo}' '${fs}' '${propiedad}'/'${uuid}' '${dispositivo}' '${fs}' defaults,noatime/g' ${FSTAB}
			fi

			;;

			"errors=remount-ro,defaults")
				sed -i 's/'${uuid}' '${dispositivo}' '${fs}' '${propiedad}'/'${uuid}' '${dispositivo}' '${fs}' defaults,noatime,errors=remount-ro/g' ${FSTAB}
			;;

			"defaults,errors=remount-ro")
				sed -i 's/'${uuid}' '${dispositivo}' '${fs}' '${propiedad}'/'${uuid}' '${dispositivo}' '${fs}' defaults,noatime,errors=remount-ro/g' ${FSTAB}
			;;

			"errors=remount-ro")

			if [ $dispositivo == "\/" ]; then
				sed -i 's/'${uuid}' '${dispositivo}' '${fs}' '${propiedad}'/'${uuid}' '${dispositivo}' '${fs}' defaults,noatime,errors=remount-ro/g' ${FSTAB}
			else
				sed -i 's/'${uuid}' '${dispositivo}' '${fs}' '${propiedad}'/'${uuid}' '${dispositivo}' '${fs}' noatime,errors=remount-ro/g' ${FSTAB}
			fi

			;;

		esac

		fi

		done

	done

	# Para cada usuario en /home/ ...
	for usuario in /home/*? ; do

	# Obteniendo sólo el nombre del usuario
	usuario_min=$(basename ${usuario})

	# Y en caso de que el usuario sea un usuario activo (existente en /etc/shadow) ...
	case $( grep "${usuario_min}:.*:.*:.*:.*:.*:::" /etc/shadow ) in

	'')
	# No hace nada si no se encuentra en /etc/shadow
	;;

	*)

        # ¿No existe la carpeta Escritorio?
        if [ ! -d ${usuario}/Escritorio ]; then
		[ -h ${usuario}/Escritorio ] && rm -rf ${usuario}/Escritorio
		[ -f ${usuario}/Escritorio ] && rm -rf ${usuario}/Escritorio
                mkdir ${usuario}/Escritorio
		chown -R ${usuario_min}:${usuario_min} ${usuario}/Escritorio
                ADVERTENCIA "Creando carpeta Escritorio en ${usuario}"
        fi
	# ¿Existe un enlace simbólico llamado Desktop?
	# ¿Y una carpeta llamada Escritorio?
	if [ -h ${usuario}/Desktop ] && [ -d ${usuario}/Escritorio ]; then
		# Borra el enlace simbólico
		rm -f ${usuario}/Desktop
		ADVERTENCIA "Removiendo enlace de escritorio Desktop en ${usuario}"
	fi
	# ¿Existe un enlace simbólico llamado Escritorio?
	# ¿Y una carpeta llamada Desktop?
	if [ -h ${usuario}/Escritorio ] && [ -d ${usuario}/Desktop ]; then
		# Borra el enlace simbólico
		rm -f ${usuario}/Escritorio
		# y renombra la carpeta a Escritorio
		mv ${usuario}/Desktop ${usuario}/Escritorio
		chown -R ${usuario_min}:${usuario_min} ${usuario}/Escritorio
		ADVERTENCIA "Borrando enlace simbólico Escritorio y renombrando carpeta Desktop a Escritorio en ${usuario}"
	fi
	# ¿Existen dos directorios con el mismo propósito?
        if [ -d ${usuario}/Escritorio ] && [ -d ${usuario}/Desktop ]; then
		# Mueve el contenido de Desktop a Escritorio
        if [ $( ls -lah ${usuario}/Desktop | wc  -l ) -gt 3 ]; then
    		mv ${usuario}/Desktop/* ${usuario}/Escritorio/
        fi
		chown -R ${usuario_min}:${usuario_min} ${usuario}/Escritorio
		# Borra la carpeta Desktop
		rm -rf ${usuario}/Desktop
		ADVERTENCIA "Moviendo el contenido de la carpeta Desktop a Escritorio y borrando Desktop en ${usuario}"
	fi

	# Configuremos XDG para que use como locale "es_VE" y
	# Escritorio como carpeta de usuario predeterminada

	echo "es_VE" > ${usuario}/.config/user-dirs.locale

cat <<EOF >${usuario}/.config/user-dirs.dirs
# This file is written by xdg-user-dirs-update
# If you want to change or add directories, just edit the line you're
# interested in. All local changes will be retained on the next run
# Format is XDG_xxx_DIR="\$HOME/yyy", where yyy is a shell-escaped
# homedir-relative path, or XDG_xxx_DIR="/yyy", where /yyy is an
# absolute path. No other format is supported.
#
XDG_DESKTOP_DIR="\$HOME/Escritorio"
XDG_DOWNLOAD_DIR="\$HOME/Descargas"
XDG_TEMPLATES_DIR="\$HOME/Plantillas"
XDG_PUBLICSHARE_DIR="\$HOME/Público"
XDG_DOCUMENTS_DIR="\$HOME/Documentos"
XDG_MUSIC_DIR="\$HOME/Música"
XDG_PICTURES_DIR="\$HOME/Imágenes"
XDG_VIDEOS_DIR="\$HOME/Videos"

EOF

	chown -R ${usuario_min}:${usuario_min} ${usuario}/.config

	# Actualicemos la configuración
	if [ -x $( which xdg-user-dirs-update ) ]; then
		su ${usuario_min} --command "xdg-user-dirs-update"
		su ${usuario_min} --command "xdg-user-dirs-update --force"
		EXITO "Carpetas de usuario actualizadas para '"${usuario_min}"'"
	fi
	
	;;

	esac
	done

	;;

	abort-upgrade|abort-remove|abort-deconfigure)
	;;

	*)

		ERROR "postinst no reconoce el argumento '"${1}"'" >&2
		exit 1

	;;

esac

#DEBHELPER#

exit 0
