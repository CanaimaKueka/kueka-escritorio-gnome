#!/bin/bash -e
#
# ==============================================================================
# PAQUETE: canaima-escritorio-gnome
# ARCHIVO: postinst
# DESCRIPCIÓN: Configura el sistema despues la instalación del paquete.
# COPYRIGHT:
#  (C) 2010 Luis Alejandro Martínez Faneyth <martinez.faneyth@gmail.com>
#  (C) 2010 Diego Alberto Aguilera Zambrano <daguilera85@gmail.com>
	#  (C) 2010 Carlos Alejandro Guerrero Mora <guerrerocarlos@gmail.com>
#  (C) 2010 Francisco Javier Vásquez Guerrero <franjvasquezg@gmail.com>
# LICENCIA: GPL3
# ==============================================================================
#
# Este programa es software libre. Puede redistribuirlo y/o modificarlo bajo los
# términos de la Licencia Pública General de GNU (versión 3).

PKG="canaima-escritorio-gnome"
LIST="acpid apmd anacron avahi-daemon bluetooth bluez-utils fetchmail dns-clean atd portmap rsync exim4 kerneloops saned acpi-fakekey acpi-support apmd canaima-bienvenido-video cryptdisks cryptdisks-early dhcdbd fam hibernate hotkey-setup kbd keymap.sh klogd live-initramfs lvm2 ntp openvpn pcmciautils pppd-dns resolvconf samba screen-cleanup splashy sysklogd tpconfig xdebconfigurator"

is_laptop=$( laptop-detect )

case ${1} in

	configure)

		echo "===== Removiendo scripts de inicio usualmente innecesarios ====="

		for list in LIST
		do

		if [ -e /etc/init.d/${list} ]
		then

			if [ $is_laptop == 0 ]
			then

				if [ ${list} != "acpid" ] || [ ${list} != "apmd" ]
				then

					echo "Removiendo demonio ${list} ..."
					update-rc.d -f ${list} remove

				fi

			else

				echo "Removiendo demonio ${list} ..."
				update-rc.d -f ${list} remove

			fi

		fi

		done

		if [ -e /etc/defaults/avahi-daemon ]
		then

			echo "===== Asegurando que avahi-daemon no inicie ====="
			sed -i 's/AVAHI_DAEMON_DETECT_LOCAL=1/AVAHI_DAEMON_DETECT_LOCAL=0/g' /etc/defaults/avahi-daemon

		fi

		if [ -e /etc/default/rcS ]
		then

			echo "===== Cambiando la forma de carga de las dependencias iniciales del sistema (CONCURRENCY=makefile) ====="
			echo 'CONCURRENCY=makefile' >> /etc/default/rcS

		fi

		if [ -e /etc/sysctl.conf ]
		then

			echo "===== Reduciendo la cantidad de procesos que se swapean, la RAM es más rápida (vm.swappiness) ====="
			echo 'vm.swappiness=10' >> /etc/sysctl.conf

		fi

		if [ -e /etc/defaults/prelink ]
		then

			echo "===== Pre-enlazando librerías para mejorar la eficiencia de Canaima (prelink) ====="
			sed -i 's/PRELINKING=unknown/PRELINKING=yes/g' /etc/defaults/prelink
			sed -i 's/PRELINKING=no/PRELINKING=yes/g' /etc/defaults/prelink
			/etc/cron.daily/prelink

		fi

		if [ -e /etc/inittab ]
		then

			echo "===== Reduciendo cantidad de TTY'S a 2, el usuario no las usa todas en realidad ====="
			sed -i 's/3:23:respawn:\/sbin\/getty/#3:23:respawn:\/sbin\/getty/g' /etc/inittab
			sed -i 's/4:23:respawn:\/sbin\/getty/#4:23:respawn:\/sbin\/getty/g' /etc/inittab
			sed -i 's/5:23:respawn:\/sbin\/getty/#5:23:respawn:\/sbin\/getty/g' /etc/inittab
			sed -i 's/6:23:respawn:\/sbin\/getty/#6:23:respawn:\/sbin\/getty/g' /etc/inittab

		fi

		echo "===== Añadiendo noatime a /etc/fstab ====="

		FSTAB=/etc/fstab

		echo " " >> ${FSTAB}
		echo " " >> ${FSTAB}
		echo "#" >> ${FSTAB}
		echo "# Optimizado para Canaima GNU/Linux (agregado noatime a las opciones de disco)" >> ${FSTAB}
		echo "#" >> ${FSTAB}

		sed -i 's/   / /g' ${FSTAB}
		sed -i 's/   / /g' ${FSTAB}
		sed -i 's/  / /g' ${FSTAB}
		sed -i 's/  / /g' ${FSTAB}
		sed -i 's/, /,/g' ${FSTAB}
		sed -i 's/  / /g' ${FSTAB}
		sed -i 's/  / /g' ${FSTAB}

		for datos in $( cat ${FSTAB} | awk '{print $3"##--TOKEN--##"$2"##--TOKEN--##"$4"##--TOKEN--##"$1}' )
		do

		for fs in ext2 ext3 ext4
		do

		if [ $( echo $( expr "$datos" : "$fs" ) ) == 4 ]
		then

		parsing=${datos#$fs##--TOKEN--##}
		dispositivo=$( echo $parsing | sed 's/##--TOKEN--##/ /g' | awk '{print $1}' )
		dispositivo=$( echo $dispositivo | sed 's/\//\\\//g' )
		propiedad=$( echo $parsing | sed 's/##--TOKEN--##/ /g' | awk '{print $2}' )
		uuid=$( echo $parsing | sed 's/##--TOKEN--##/ /g' | awk '{print $3}' )

		case ${propiedad} in

			"defaults")

				if [ $dispositivo == "\/" ]
				then

					sed -i 's/'${uuid}' '${dispositivo}' '${fs}' '${propiedad}'/'${uuid}' '${dispositivo}' '${fs}' defaults,noatime,errors=remount-ro/g' ${FSTAB}

				else

					sed -i 's/'${uuid}' '${dispositivo}' '${fs}' '${propiedad}'/'${uuid}' '${dispositivo}' '${fs}' defaults,noatime/g' ${FSTAB}

				fi

			;;

			"errors=remount-ro,defaults")

				sed -i 's/'${uuid}' '${dispositivo}' '${fs}' '${propiedad}'/'${uuid}' '${dispositivo}' '${fs}' defaults,noatime,errors=remount-ro/g' ${FSTAB}

			;;

			"defaults,errors=remount-ro")

				sed -i 's/'${uuid}' '${dispositivo}' '${fs}' '${propiedad}'/'${uuid}' '${dispositivo}' '${fs}' defaults,noatime,errors=remount-ro/g' ${FSTAB}

			;;

			"errors=remount-ro")

				if [ $dispositivo == "\/" ]
				then

					sed -i 's/'${uuid}' '${dispositivo}' '${fs}' '${propiedad}'/'${uuid}' '${dispositivo}' '${fs}' defaults,noatime,errors=remount-ro/g' ${FSTAB}

				else

					sed -i 's/'${uuid}' '${dispositivo}' '${fs}' '${propiedad}'/'${uuid}' '${dispositivo}' '${fs}' noatime,errors=remount-ro/g' ${FSTAB}

				fi

			;;

		esac

		fi

		done

		done


	;;

	abort-upgrade|abort-remove|abort-deconfigure)
	;;

	*)

		echo "postinst no reconoce el argumento '"${1}"'" >&2
		exit 1

	;;

esac

#DEBHELPER#

exit 0
